{"responseData": {"feed":{"feedUrl":"http://syndication.thedailywtf.com/TheDailyWtf","title":"The Daily WTF","link":"http://thedailywtf.com/","author":"","description":"Curious Perversions in Information Technology","type":"rss20","entries":[{"title":"Error'd: Google's Time Travel Shenanigans","link":"http://thedailywtf.com/articles/google-s-time-travel-shenanigans","author":"Mark Bowytz","publishedDate":"Fri, 23 Oct 2015 03:00:00 -0700","contentSnippet":"\"10 minutes is pretty reasonable, but I don't think that I'm going to make my connection 2 minutes in the past,\" writes Rich ...","content":"\u003cp\u003e\"10 minutes is pretty reasonable, but I don't think that I'm going to make my connection 2 minutes in the past,\" writes \u003cstrong\u003eRich H.\u003c/strong\u003e\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-1\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e186/Pic-1.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e...and if you liked that one...\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eHereward M.\u003c/strong\u003e wrote, \"I've found a magical time travelling embankment! Thanks, Google!\"\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-4\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e186/Pic-4.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\"I have no idea what the question is even asking,\" wrote \u003cstrong\u003eAdam F.\u003c/strong\u003e, \"I mean, practicing what, piano?\"\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-2\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e186/Pic-2.jpg\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\"I don't know if I'd say that setup is blocked. I'd say an impasse is more like it,\" \u003cstrong\u003eBjörn F.\u003c/strong\u003e writes.\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-3\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e186/Pic-3.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\"After trying three times, I give up. FINE. Turn off podcast syncing,\" writes \u003cstrong\u003eScott S.\u003c/strong\u003e \n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-5\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e186/Pic-5.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003ePeter G.\u003c/strong\u003e wrote, \"An operation failed, and there was a reason for it. That is all.\"\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-6\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e186/Pic-6.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eAmmar\u003c/strong\u003e writes, \"Sure, it says not to localize, but really, someone probably should have.\"\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-7\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e186/Pic-7.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\"Wow. I didn't realise my SQL database had got so big, maybe it's time to move it into the cloud?\" wrote \u003cstrong\u003eMack\u003c/strong\u003e.\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-8\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e186/Pic-8.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/images/footer/puppetlabs50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t[Advertisement] Manage IT infrastructure as code across all environments with \u003ca href\u003d\"http://puppetlabs.com/\"\u003ePuppet\u003c/a\u003e. Puppet Enterprise now offers more control and insight, with role-based access control, activity logging and all-new Puppet Apps. Start your \u003ca href\u003d\"http://puppetlabs.com/download-puppet-enterprise\"\u003efree trial\u003c/a\u003e today!\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003dHOD1eRAR5y8:PcWILiC0_B4:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/EYoCRvJh7sw\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e","categories":["Error\u0026#39;d"]},{"title":"CodeSOD: A Well Mapped Error","link":"http://thedailywtf.com/articles/a-well-mapped-error","author":"Remy Porter","publishedDate":"Thu, 22 Oct 2015 03:30:00 -0700","contentSnippet":"Marvin\u0026#8217;s company had a problem. Their C++ application tended to throw out a lot of error codes. That was actually okay- ...","content":"\u003cp\u003e\u003cstrong\u003eMarvin\u003c/strong\u003e’s company had a problem. Their C++ application tended to throw out a \u003cem\u003elot\u003c/em\u003e of error codes. That was actually okay- that application had a lot of possible failure modes that it couldn’t do anything about other than cough up an error and quit. \u003c/p\u003e\n\n\u003cp\u003eThe problem was that their customers weren’t particularly happy with messages like: \u003ccode\u003eError: QB57\u003c/code\u003e, since it told them absolutely nothing. “RTFM” was not an acceptable response, so \u003cem\u003esomeone\u003c/em\u003e had to add some functionality to turn those cryptic error codes into meaningful messages. \u003c/p\u003e\n\n\u003cp\u003eSince it was a simple job, they handed it off to the co-worker who nobody really thought all that much of. He was a terrible programmer, but how badly could he screw a simple map/hash/dictionary problem up? \u003c/p\u003e\n\n\u003cp\u003eFirst, construct the data structures to hold the error messages: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eERROR_REC Error_A_List[] \u003d {\n  {\u0026quot;AA01\u0026quot;, \u0026quot;Error AA01 Description\u0026quot;},\n  {\u0026quot;AA02\u0026quot;, \u0026quot;Error AA02 Description\u0026quot;},\n  /* about 100 more! */\n};\nERROR_REC Error_B_List[] \u003d \n{\n  {\u0026quot;BA01\u0026quot;, \u0026quot;Error BA01 Description\u0026quot;},\n {\u0026quot;BA02\u0026quot;, \u0026quot;Error BA02 Description\u0026quot;},\n/* more of course */\n}\n/* etc for all the letters! - 26 total 2D arrays*/\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWell, that’s a bad start. Two-Dimensional arrays aren’t the best way to represent a map, but hey, maybe they have a clever way of searching them? \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003econst char* GetErrorDescription(char *wk_code) {\n  bool done \u003d false;\n  int indx \u003d 0, _wk_arr_size \u003d 0;\n  memset((char*) ret_desc, 0, 400);\n        \n  switch(wk_code[0]) {\n    case \u0026#39;A\u0026#39;: _wk_arr_size \u003d sizeof(Error_A_List)/sizeof(ERROR_REC);    break;\n    case \u0026#39;B\u0026#39;:  _wk_arr_size \u003d sizeof(Error_B_List)/sizeof(ERROR_REC);   break;\n/* etc for C through Z - who doesn\u0026#39;t love a 26-option case statement? */\n}\n\n  ERROR_REC *wk_Error_List \u003d new ERROR_REC[_wk_arr_size];\n  delete [] wk_Error_List;\n\n  switch(wk_code[0]) {\n    case \u0026#39;A\u0026#39;: wk_Error_List \u003d Error_A_List; break;\n    case \u0026#39;B\u0026#39;: wk_Error_List \u003d Error_B_List; break;\n/* Second verse, same as the first…*/\n  }\n\n  while (!done) {\n    if (strcmp(wk_code, wk_Error_List[indx].Code) \u003d\u003d 0) {\n      done \u003d true;\n      strcpy(ret_desc, wk_Error_List[indx].Desc);\n    }\n    indx++;\n    if (indx \u0026gt;\u003d _wk_arr_size)\n      done \u003d true;\n    else {\n      if (strcmp(wk_code, wk_ResultCode_List[indx].Code) \u0026lt; 0)\n        done \u003d true;\n      }\n  }\n  return ret_desc;\n}\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e… I guess not. Not only do we have a total of 62 \u003cspan title\u003d\"click me!\"\u003ebranches\n\u003c/span\u003e worth of \u003ccode\u003ecase\u003c/code\u003e statements, but we have a first-year CS major’s solution to breaking out of a while loop. A loop that just brute forces its way through the list of possible codes. \u003c/p\u003e\n\n\u003cp\u003eThe best thing we can say is that the code has been optimized- \u003cem\u003enever\u003c/em\u003e will it need to brute-force its way through \u003cem\u003eevery\u003c/em\u003e possible error code. Instead, it brute-forces its way through approximately 1/26th of them. \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eMarvin\u003c/strong\u003e said, “I was going to replace it with about 5 lines of code, but I think I’ll get more enjoyment by leaving it the way it is.” From this, I assume Marvin is a horrible person, or his company uses lines-of-code as a productivity metric.\u003c/p\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/images/footer/puppetlabs50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t[Advertisement] Manage IT infrastructure as code across all environments with \u003ca href\u003d\"http://puppetlabs.com/\"\u003ePuppet\u003c/a\u003e. Puppet Enterprise now offers more control and insight, with role-based access control, activity logging and all-new Puppet Apps. Start your \u003ca href\u003d\"http://puppetlabs.com/download-puppet-enterprise\"\u003efree trial\u003c/a\u003e today!\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003du2QCacKZwbc:4oVg7f5Tz4Q:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/JSez1SM82cQ\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e","categories":["CodeSOD"]},{"title":"Apache Chief","link":"http://thedailywtf.com/articles/apache-chief","author":"Charles Robinson","publishedDate":"Wed, 21 Oct 2015 03:30:00 -0700","contentSnippet":"W.T.F. Community College hired a team of highly-recommended web design consultants to bring its website in to the 21st century. ...","content":"W.T.F. Community College hired a team of highly-recommended web design consultants to bring its website in to the 21st century. \u003cb\u003ePaul\u003c/b\u003e was tasked with overseeing their work and supporting the new site upon go-live. After a couple months of grinding, they cranked out a beautiful new site that was accessible, navigable, and responsive. It also removed the old site's dependence on Flash, replacing it with a titanic mound of PHP and JavaScript that was run by Apache. \n\u003cp\u003e\n\u003cimg src\u003d\"/images/remy/skroob.jpg\"\u003e\nPaul and his team gave it a thorough beating in their test environment and everything seemed solid. They even gave a demo of it to the the head of W.T.F. Community College, President Skroob. He was able to easily find his way around, sign up, set his password to 1-2-3-4-5, and register for fake classes. It got the Prez's official salute of approval. The amazing new website was ready to be launched in time for the fall semester. \n\u003cp\u003e\n\nThe first day of classes rolled around and suddenly everything didn't seem so rosy. President Skroob frantically burst in to the IT office shouting \"The web site is down! The web site is down!\" A quick check of the monitoring system didn't show anything wrong, and manual inspection didn't either. The server hosting the site was hardly breaking a sweat. No pressure on CPU, RAM, or I/O. Paul tried browsing to the site and the browser just hung. No errors, no nothing.\n\n\u003cp\u003e\n\n\"Well that's interesting,\" Paul said to no one in particular. \"We've lost the bleeps, the sweeps, and the creeps.\" \n\u003cp\u003e\n\n\"Why don't we try restarting Apache?\" one of Paul's cohorts suggested. Paul shrugged and did so, and the website immediately returned to normal.\n\u003cp\u003e\n\"I don't know what old Indian tribes have to do with our web site, but I'm glad it's working now!\" President Skroob stated before ducking out of the office. \n\u003cp\u003e\nPaul set up a simple monitor to hit the home page every 5 minutes to make sure the problem didn't return. But an hour later, the alarm went off.  He restarted Apache quickly, and things cleared up. So began a nightmare where someone from Paul's team always had to be available to restart Apache once the website hung. The Prez was not pleased.\n\u003cp\u003e\n\"Get a hold of the Apache Chief who made this website and get them in here to fix it NOW!\" Skroob shouted at Paul.\n\u003cp\u003e\nPaul got on the horn to the consultants, who hemmed and hawed about checking their code. If they were to be brought back in, it would cost W.T.F. CC an exorbitant sum. Paul decided to look more closely at the server first, and found Apache was running out of processes. He increased the MaxProcesses limit which bought them some time before the site would hang again. All processes were stuck in CLOSE_WAIT status, meaning the client browser had closed the connection but the server hadn't.\n\u003cp\u003e\nA system call trace on a stuck server process showed it was waiting on a file lock, and a stack dump showed the culprit was `mod_php`. Since they were waiting on a lock, they were suspended and couldn't exit. In fact, all the dozens of stuck processes were waiting on the \u003ci\u003esame\u003c/i\u003e file: `/var/lib/php/session/sess_111`.\n\n\u003cp\u003e\n\nPaul got back on the phone with the consultant team and learned the story behind this big WTF. The new website had feeds (such as current events and the faculty directory) that could be updated dynamically and might be accessed from any session. But to avoid regenerating the output HTML on each load, it was cached so every PHP process could get to it. The consultants had done this using a single, global, monster PHP session.\n\u003cp\u003e\nThus, \u003ci\u003eevery\u003c/i\u003e website hit required a server process to read and write that one session, thus locking the session file. If new requests came in at Ludicrous Speed, they were unable to get through the bottleneck and eventually Apache couldn't spawn any more processes. At that point, the site would go catatonic to the user. \n\u003cp\u003e\n\u0026quot;Guys, this is in no way acceptable,\u0026quot; Paul berated Apache Chief \u0026amp; Co. \u0026quot;You need to find another approach to caching the data.\u0026quot; Meanwhile, Paul wrote a workaround script that ran once a minute and restarted Apache if there were too many stuck processes. Two weeks and thousands of dollars later, the consultants ameliorated the problem by dividing traffic amongst four different cache \u0026quot;sessions\u0026quot;. \n\u003cp\u003e\nIt worked well enough that Paul's script only got triggered during extremely high usage times. Even then, there was very little downtime. President Skroob put the kibosh on any more of the school's Space Bucks going to the Apache tribe, so getting them to develop something that wasn't just a hack job was out of the question. As long as it worked most of the time and kept Skroob out of their office, Paul was comfortable with leaving well-enough alone. \n\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/images/footer/inedo50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t[Advertisement] Use NuGet or npm? Check out \u003ca href\u003d\"http://inedo.com/proget?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eProGet\u003c/a\u003e, the easy-to-use package repository that lets you host and manage your own personal or enterprise-wide NuGet feeds and npm repositories. It's got an \n\t\u003ca href\u003d\"http://inedo.com/proget/features?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eimpressively-featured free edition\u003c/a\u003e, too!\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003dqSzm777Q9VU:jtYXeIZGjL4:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/DXJftBoPXwU\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e\u003c/p\u003e\u003c/p\u003e\u003c/p\u003e\u003c/p\u003e\u003c/p\u003e\u003c/p\u003e\u003c/p\u003e\u003c/p\u003e\u003c/p\u003e\u003c/p\u003e\u003c/p\u003e\u003c/p\u003e\u003c/p\u003e","categories":["Feature Articles"]},{"title":"CodeSOD: Sort, Then Add, Forever","link":"http://thedailywtf.com/articles/sort-then-add-forever","author":"Jane Bailey","publishedDate":"Tue, 20 Oct 2015 03:30:00 -0700","contentSnippet":"Go-live day for the new CabinetWorld redesign was a tense, hurried affair. Developers streamed in at 5:00 AM, hoping to catch ...","content":"\u003cp\u003eGo-live day for the new CabinetWorld redesign was a tense, hurried affair. Developers streamed in at 5:00 AM, hoping to catch wind of early problems before most of the country awoke and started shopping. True to form, the overworked break-room coffee machine gave up the ghost at 5:10, but luckily, at 6:00 the boss brought in doughnuts, and by 6:30 a Starbucks run had been arranged. Everyone huddled in the war room, nervously watching the monitors as the number of concurrent visitors rose steadily. And then ...\u003c/p\u003e\n\n\u003cp style\u003d\"float:right;padding-left:10px;padding-bottom:10px\"\u003e\u003ca title\u003d\"By trekphiler (Own work) [CC BY-SA 3.0 (http://creativecommons.org/licenses/by-sa/3.0)], via Wikimedia Commons\" href\u003d\"https://commons.wikimedia.org/wiki/File%3A1890s_Burroughs_adding_machine.jpg\"\u003e\u003cimg width\u003d\"256\" alt\u003d\"1890s Burroughs adding machine\" src\u003d\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/78/1890s_Burroughs_adding_machine.jpg/256px-1890s_Burroughs_adding_machine.jpg\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\"Why's it slowing?\" \u003cb\u003eAshley\u003c/b\u003e whispered, not wanting to cause a panic.\u003c/p\u003e\n\n\u003cp\u003e\u003cb\u003eDave\u003c/b\u003e stuffed the rest of a cruller into his mouth and looked where she was pointing: one particular API service was buckling under the so-far moderate load. Oddly enough, this wasn't part of the overhaul. This service, which merely returned a product list, was a legacy service they'd switched to using, one that powered their own internal tools. It should've been nice and stable—but instead, it chugged along like it had eaten a few too many doughnuts itself. \u003c/p\u003e\n\n\u003cp\u003eDave grabbed the source code while Ashley combed the production logs, looking for the source of the slowdown. \"Crap,\" whispered Dave, noticing the version control history. \"That's Bruce the Intern's work.\"\u003c/p\u003e\n\n\u003cp\u003eBruce had been the \"clever\" intern the summer he'd worked at CabinetWorld, the one they'd assigned actual coding tasks to. Unfortunately, he'd been too clever for his own good, as the code revealed:\u003c/p\u003e\n\n\u003cpre\u003e\n\u003ccode\u003e\npublic List getAllCabinets() {\n\ttry {\n\t\tList m \u003d new Vector();\n\t\tList cabinets \u003d SpecificObjectManager.getAllPrograms();\n\t\tIterator it \u003d cabinets.iterator();\n\t\twhile (it.hasNext()) {\n\t\t\tCabinetAjax ca \u003d new CabinetAjax();\n\t\t\tSearchProgramShell cabinet \u003d (SearchProgramShell) it.next();\n\t\t\tca.setId(cabinet.getCabinetId());\n\t\t\tca.setTitle(cabinet.getCabinetTitle());\n\t\t\tCollections.sort(m, new CabinetAjaxTitleComparator());\n\t\t\tm.add(ca);\n\t\t}\n\t\treturn m;\n\t} catch (Exception e) {\n\t\tlog.error(e.toString(), e);\n\t} finally {\n\t\tHibernateSessionFactory.closeSession();\n\t}\n\treturn null;\n}\n\u003c/code\u003e\n\u003c/pre\u003e\n\n\u003cp\u003e\"That is, without a doubt, the worst sort I've ever seen,\" whispered Ashley, paling. \"Why does it re-sort every iteration?\"\u003c/p\u003e\n\n\u003cp\u003e\"It doesn't even work. The last element won't be sorted,\" Dave whispered back. \u003c/p\u003e\n\n\u003cp\u003e\"Why a vector of CabinetAjaxes? Why not just a Map, ID to title?\"\u003c/p\u003e\n\n\u003cp\u003e\"God only knows.\"\u003c/p\u003e\n\n\u003cp\u003e\"What do we do now?\" Ashley glanced up at the increasingly red monitors. \"Do we roll back?\"\u003c/p\u003e\n\n\u003cp\u003eDave clamped a hand over her mouth. \"Not so loud! No. We write a patch and fail forward, of course.\" He rapidly moved the sort code to just before the return, saved, and committed. \"Let's see if we can bribe Ops with some of these donuts ...\"\u003c/p\u003e\n\n\n\n\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/images/footer/inedo50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t[Advertisement] Use NuGet or npm? Check out \u003ca href\u003d\"http://inedo.com/proget?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eProGet\u003c/a\u003e, the easy-to-use package repository that lets you host and manage your own personal or enterprise-wide NuGet feeds and npm repositories. It's got an \n\t\u003ca href\u003d\"http://inedo.com/proget/features?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eimpressively-featured free edition\u003c/a\u003e, too!\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003dHHBYulQrTLU:xtNVXLK8C8k:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/WEtkMQRdZMo\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e","categories":["CodeSOD"]},{"title":"An Efficient Curmudgeon","link":"http://thedailywtf.com/articles/an-efficient-curmudgeon","author":"TJ Mott","publishedDate":"Mon, 19 Oct 2015 03:30:00 -0700","contentSnippet":"One of the things a good developer should always strive for is efficiency. Slow code should be improved if possible. ...","content":"\u003cp\u003eOne of the things a good developer should always strive for is efficiency. Slow code should be improved if possible. Complicated steps should be simplified or removed. Finding a poorly-implemented process which is costing company time and streamlining it is usually a good thing, and means more profits, which means larger paychecks and bonuses, and happy bosses. Right? \u003c/p\u003e\n\n\u003cp\u003e\u003ca style\u003d\"text-align:center;font-size:smaller;font-style:italic\" title\u003d\"By Achim Hering (Own work) [GFDL (http://www.gnu.org/copyleft/fdl.html) or CC BY 3.0 (http://creativecommons.org/licenses/by/3.0)], via Wikimedia Commons\" href\u003d\"https://commons.wikimedia.org/wiki/File%3AAss_automation_systems_01.png\"\u003e\u003cimg width\u003d\"512\" alt\u003d\"The ASS Automation System\u0026#39;s corporate headquarters.\" src\u003d\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/02/Ass_automation_systems_01.png/512px-Ass_automation_systems_01.png\"\u003e\u003cbr\u003e\nThis is a real company, but not where our story comes from\u003c/a\u003e \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eDave\u003c/strong\u003e had been working in the shipping department for a while when he discovered how the monthly shipping statistics were gathered. His coworker, Clarke, walked him through the process one day when Dave had some downtime. \u003c/p\u003e\n\n\u003cp\u003e“Everything comes in as Excel reports from our two software systems,” Clarke began. “Then I have to edit them to get them in the same format, combine them, and muck around with filters and sums to get the numbers the boss likes to see.” \u003c/p\u003e\n\n\u003cp\u003eDave shuddered at the thought of manually hacking reports together. “How long does it take you?” \u003c/p\u003e\n\n\u003cp\u003e“It’s not too bad anymore, maybe four or five hours. Sometimetimes longer if I make a mistake.” Clarke shrugged. “It’s not hard, just tedious.” \u003c/p\u003e\n\n\u003cp\u003e“And this is each month?” \u003c/p\u003e\n\n\u003cp\u003e“Yep. It used to take me a few days until I got used to it.” \u003c/p\u003e\n\n\u003cp\u003eDave thought for a moment. “The data isn’t complicated at all. I bet I could write a script to do most of it for you.” \u003c/p\u003e\n\n\u003cp\u003eClarke’s eyes lit up at the suggestion. “Really?” \u003c/p\u003e\n\n\u003cp\u003eTogether they went to their supervisor, an older gentleman named Rick who looked like he could retire any minute now. After a brief proposal, Rick didn’t seem impressed. “The current system works fine, I don’t think it needs to be changed.” \u003c/p\u003e\n\n\u003cp\u003e“I could have the whole thing written in less time than it takes Clarke to process one monthly report,” said Dave. “After that, all he’d have to do is click a button. We’re talking minutes instead of hours.” \u003c/p\u003e\n\n\u003cp\u003eRick muttered something and dismissed them. Dave and Clarke left, unsure if they had permission to proceed. \u003c/p\u003e\n\n\u003cp\u003eDave wrote the new system anyway. Once he’d received some older reports to understand the formatting, he spent a few hours of spare time to write up a fairly simple C# program to automate all the manual editing that Clarke had to do. With a long history of previous reports and the historical data, Dave proved the program’s accuracy by running it across a year’s worth of data. \u003c/p\u003e\n\n\u003cp\u003eIt worked flawlessly. Creating the monthly report now only took about ten minutes, most of which was spent waiting on connections to the other software systems. Once it had all the data, it spit out the report in less than a second. When the next report was due, they generated it using Dave’s application and avoided hours and hours of Excel wrangling. \u003c/p\u003e\n\n\u003cp\u003eRick was not impressed when they showed him their work. “How do I know if it’s right?” he asked. “I don’t really trust computers. I’ll have to verify everything myself now!” \u003c/p\u003e\n\n\u003cp\u003eAnd that he did. Rick spent the next two days printing out every daily-activity email for the previous month, calculating all the shipping statistics with a four-function calculator, and compiling results on a sheet of notebook paper. And because the emails were user-generated, not system-generated, they often contained minor errors which required even more time to correct. After several tries, Rick eventually had a report that agreed with Dave’s. \u003c/p\u003e\n\n\u003cp\u003eAnd this continued for a few more months. Dave’s program would generate an accurate report within minutes, then Rick would spend hours, if not days, hidden within a small fort made of printed emails, only to eventually come up with the same numbers. \u003c/p\u003e\n\n\u003cp\u003eWord got out on Dave’s accomplishment and he was soon offered a transfer to another department. The supervisor there was not afraid of modern technology and wanted to replace their current paper-based delivery manifest process with a computer-based solution that could save thousands of dollars in printing costs. Dave accepted the transfer and eagerly started on the new project. And last he heard, Rick had thrown away Dave’s little shipping report program and even the old Excel report system, instead dealing with stacks of printed emails and a four-function calculator to generate a handwritten report each month.\u003c/p\u003e\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/images/footer/inedo50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t[Advertisement] \u003ca href\u003d\"http://inedo.com/buildmaster?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eBuildMaster\u003c/a\u003e is more than just an automation tool: it brings together the people, process, and practices that allow teams to deliver software rapidly, reliably, and responsibly. And it's incredibly easy to get started; \u003ca href\u003d\"http://inedo.com/buildmaster?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003edownload now\u003c/a\u003e and use the built-in tutorials and wizards to get your builds and/or deploys automated!\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003dh7vVyuiCcaA:jup8h83rShM:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/fu206N3KH90\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e","categories":["Feature Articles"]},{"title":"Error'd: For Quality Assurance Purposes","link":"http://thedailywtf.com/articles/for-quality-assurance-purposes","author":"Mark Bowytz","publishedDate":"Fri, 16 Oct 2015 03:00:00 -0700","contentSnippet":"\"I don't work for them, so when did it become my job to do their quality control?\" writes T. K. \n\u0026nbsp;\n\n\"You know, I'm pretty ...","content":"\u003cp\u003e\"I don't work for them, so when did it become \u003cu\u003emy\u003c/u\u003e job to do \u003ci\u003etheir\u003c/i\u003e quality control?\" writes \u003cstrong\u003eT. K.\u003c/strong\u003e \n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-5\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e185/Pic-5.jpg\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\"You know, I'm pretty sure 100% of people with regular gigs have at least one of these fantasies,\" writes \u003cstrong\u003eTim R.\u003c/strong\u003e\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-1\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e185/Pic-1.jpg\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\"This likely gives a clue to why workstations at my site are failing like a classroom of 6th-graders taking a college algebra exam,\" wrote \u003cstrong\u003eJonathan\u003c/strong\u003e.\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-2\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e185/Pic-2.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\"Apparently the advanced paid-for features also includes labels for buttons,\" \u003cstrong\u003eRobert S.\u003c/strong\u003e writes.\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-3\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e185/Pic-3.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eParamdeep\u003c/strong\u003e wrote, \"Text! Come here please!\"\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-4\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e185/Pic-4.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\"\u003ca href\u003d\"http://thedailywtf.com/articles/helpful-as-ever-\"\u003eA recent Error'd\u003c/a\u003e had a photo showing the source of Apple's Command keys in the Faroe Islands,\" \u003cstrong\u003ePeter G.\u003c/strong\u003e wrote, \"This is a shot of a Norwegian Command center, located just outside Fredrikstad in southern Norway.\"\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-6\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e185/Pic-6.jpg\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eMagnus M.\u003c/strong\u003e writes, \"This came from a program used for interfacing with a medical microscope. Serious stuff, no doubt. It seems like the main application would rather be at it alone.\"\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-7\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e185/Pic-7.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\"If by 'instant' you mean 'it will take upwards of 30 seconds', then yeah, it's 'instant', \" wrote \u003cstrong\u003eJason\u003c/strong\u003e.\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-8\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e185/Pic-8.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/images/footer/inedo50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t[Advertisement] \u003ca href\u003d\"http://inedo.com/buildmaster?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eBuildMaster\u003c/a\u003e is more than just an automation tool: it brings together the people, process, and practices that allow teams to deliver software rapidly, reliably, and responsibly. And it's incredibly easy to get started; \u003ca href\u003d\"http://inedo.com/buildmaster?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003edownload now\u003c/a\u003e and use the built-in tutorials and wizards to get your builds and/or deploys automated!\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003dPgmHDg_cuIk:QZXm1pyrjzo:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/boLvoVVyNG4\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e","categories":["Error\u0026#39;d"]},{"title":"CodeSOD: Validate My Feelings of Cleverness","link":"http://thedailywtf.com/articles/validate-my-feelings-of-cleverness","author":"Remy Porter","publishedDate":"Thu, 15 Oct 2015 03:30:00 -0700","contentSnippet":"It\u0026#8217;s not uncommon to have a branch in your code along the lines of, if (debugMode) { doSomeLogTypeThingy(); }. Usually, ...","content":"\u003cp\u003eIt’s not uncommon to have a branch in your code along the lines of, \u003ccode\u003eif (debugMode) { doSomeLogTypeThingy(); }\u003c/code\u003e. Usually, we try and wrap that sort of stuff up and keep it far away from the actual business logic, and the result is a plethora of logging frameworks and diagnostic libraries. \u003c/p\u003e\n\n\u003cp\u003eThey are, however, consistent about one thing: whether or not \u003ccode\u003edebugMode\u003c/code\u003e is enabled or not, the actual business logic should behave the same way. They’re designed and intended to be minimally disruptive. \u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eRemco\u003c/strong\u003e found this method: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e       public static void objectIsValid(final Object objectToCheck, final String objectName) {\n                if(objectToCheck instanceof Validatable){\n                        objectIsValid((Validatable)objectToCheck, objectName);\n                }else{\n                        if(     log.isDebugEnabled() \u0026amp;\u0026amp;\n                                objectToCheck !\u003d null \u0026amp;\u0026amp;\n                                objectToCheck.getClass().getPackage().getName().startsWith(\u0026quot;com.initrode\u0026quot;) \u0026amp;\u0026amp;\n                                !objectToCheck.getClass().getName().contains(\u0026quot;Enum\u0026quot;)\n                                    ){\n                                        throw new IllegalArgumentException(\u0026quot;this class should implement validatable:\u0026quot;+objectToCheck.getClass());\n                        }\n                        validateObjectIsNotNull(objectToCheck, objectName);\n                }\n        }\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis mess of code takes the interesting stance that, if debugging is enabled, that means it should throw exceptions, but if debug mode \u003cem\u003eisn’t\u003c/em\u003e enabled, it should just… not do anything? \u003c/p\u003e\n\n\u003cp\u003eOf course, that’s not the only useless thing in that method. Note at the top, where they use \u003ccode\u003einstanceof\u003c/code\u003e to check if the object can be cast to a Validatable? And then it passes it to what is obviously an overloaded method that accepts a Validatable? \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e    public static void objectIsValid(final Validatable objectToCheck, final String objectName) {\n                validateObjectIsNotNull(objectToCheck,objectName);\n\n                ConstraintViolation[] invalidValues \u003d validatorRepos.validate(objectToCheck);\n                if(invalidValues.length \u0026gt; 0){\n                        throw new ValidationException(invalidValues);\n                }\n        }\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eYeah. So there is no planet in which the first branch would ever evaluate to true, and since debugging mode is nearly never enabled in production… well, at least they got to use \u003cspan title\u003d\"click me!\"\u003ereflection\u003c/span\u003e, I guess. \u003c/p\u003e\n\n\n\n\n\n\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/images/footer/inedo50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t[Advertisement] Use NuGet or npm? Check out \u003ca href\u003d\"http://inedo.com/proget?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eProGet\u003c/a\u003e, the easy-to-use package repository that lets you host and manage your own personal or enterprise-wide NuGet feeds and npm repositories. It's got an \n\t\u003ca href\u003d\"http://inedo.com/proget/features?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eimpressively-featured free edition\u003c/a\u003e, too!\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003dpSG-I6Oz3N0:XarmVmeGeaQ:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/dKurf0V-Bo4\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e","categories":["CodeSOD"]},{"title":"Filing Data","link":"http://thedailywtf.com/articles/filing-data","author":"snoofle","publishedDate":"Wed, 14 Oct 2015 03:30:00 -0700","contentSnippet":"Databases are wonderful things. They help you organize your data at multiple levels. Large logical units of data are stored in ...","content":"\u003cp\u003eDatabases are wonderful things. They help you organize your data at multiple levels. Large logical units of data are stored in databases. Smaller logical divisions are stored in tables, and individual records are stored in rows. Once you have your data stored like that, you can access it in all sorts of wonderful ways.\u003c/p\u003e\n\n\u003ca title\u003d\"Vysotsky (Wikimedia) [CC BY-SA 4.0 (http://creativecommons.org/licenses/by-sa/4.0) or Attribution], via Wikimedia Commons\" href\u003d\"https://commons.wikimedia.org/wiki/File%3AMeertens6.JPG\"\u003e\u003cimg width\u003d\"512\" alt\u003d\"Meertens6\" src\u003d\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Meertens6.JPG/512px-Meertens6.JPG\"\u003e\u003c/a\u003e\n\n\u003cp\u003eOf course, there's more to it than that. Beneath the database is the file system. Beneath that, there are one or more drive arrays each with one or more disk drives, each with one or more platters. Read/Write heads move back and forth to access the data on those platters. All sorts of sophisticated mechanisms have been developed to minimize the dead time of having a head in the right place, but waiting for the platter to spin the data beneath it for retrieval.\u003c/p\u003e\n\n\u003cp\u003eDBAs take this into account when defining where the database and included tables will be stored. For example, they shouldn't put two databases (for different applications) that require extremely high rates of access on the same disks so as to minimize contention, because a head can't be in two places at once. Sometimes, they'll stripe data for a single table across multiple spindles so as to minimize hot spot activity by hashing the data across partitions.\u003c/p\u003e\n\n\u003cp\u003e\u003cb\u003eMr. Anon\u003c/b\u003e. works with a DBA who believes that there is a better approach. Each database should contain one table. That database should reside in its own data file on the disk. Accordingly, there were thousands of data files. Since the operating system has a limit on the number of open file handles, the data server could only access so many databases at one time. The underlying theory was that this would reduce contention.\u003c/p\u003e\n\n\u003cp\u003eHowever, since the files are stored all over the disks, the heads-can't-be-in-two-places-at-once issue still causes problems. Since a table/database is stored in a single file, it's no longer possible to stripe it (as one might with partitions). Also, since the data server can only open so many file handles at once, in order to open more, it must juggle opening and closing database file handles. As one might expect, this overhead is substantially noticeable.\u003c/p\u003e\n\n\u003cp\u003eOf course, there is the maintenance side of things as well. Changing the log segment of a 200 table database is basically a one-off action. Doing it for a database that is stored as 200 separate databases of one table each now becomes a significant amount of effort. It's still O(n), where n is the number of databases, but now it's a huge effort. The same goes for every other database-level attribute.\u003c/p\u003e\n\n\u003cp\u003eA more interesting facet is that now it's possible for only one table of your database to go down while all the others are happily processing requests. Now you need to code multi-table inserts as multi-phase commits. \n\u003c/p\u003e\n\n\u003cp\u003eEqually interesting is how one might code a join of n tables, when it's possible that zero or more of them might be in databases that are unavailable. Hmm?\u003c/p\u003e\n\n\u003cp\u003eAll of this was rationalized as acceptable because it was all to support a web application, where performance didn't matter.\u003c/p\u003e\n\n\u003cp\u003eAh well, at least this way you know you'll never find a database with thousands of tables in it.\u003c/p\u003e\n\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/images/footer/release50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t[Advertisement] \u003ca href\u003d\"http://inedo.com/release?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eRelease!\u003c/a\u003e\n\tis a light card game about software and the people who make it. Play with 2-5 people, or up to 10 with two copies - only $9.95 shipped!\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003dvQWTpS8hnos:QofYLwocPMU:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/h4ghLOSYKbY\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e","categories":["Feature Articles"]},{"title":"Coded Smorgasbord: A Type of Insanity","link":"http://thedailywtf.com/articles/a-type-of-insanity","author":"Remy Porter","publishedDate":"Tue, 13 Oct 2015 03:30:00 -0700","contentSnippet":"Types are fundamental to most programming languages. Even the loosest, duckiest type system is still a system of some kind. ...","content":"\u003cp\u003eTypes are fundamental to most programming languages. Even the loosest, duckiest type system is still a \u003cem\u003esystem\u003c/em\u003e of some kind. It’s impossible to be a programmer if you don’t at least have a vague understanding of what types are, what they mean, and how you use them. \u003c/p\u003e\n\n\u003cp\u003eWell, not \u003cem\u003eimpossible\u003c/em\u003e. \u003c/p\u003e\n\n\u003ch3\u003eThe Null Type\u003c/h3\u003e\n\n\u003cp\u003e\u003cstrong\u003eKelly\u003c/strong\u003e came across some C# code that needed to take the value in one variable (which may be null), and store it in the property in an object. Instead of writing the obvious statement: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003esomeObj.SomeProperty \u003d instanceOfAClass\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eKelly’s predecessor wrote this: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003esomeObj.SomeProperty \u003d (AClass) null !\u003d null ? null : instanceOfAClass;\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThat conditional is a mystery: cast null to a class type, and if it somehow ceases to be null in this process, return null, otherwise return an instanceOfAClass. \u003c/p\u003e\n\n\n\n\u003ch3\u003eThe Flip Flop\u003c/h3\u003e\n\n\u003cp\u003eThat, of course, was just some copy-pasted code. \u003cstrong\u003eCara\u003c/strong\u003e recently had to delve into the sewer- er, I mean \u003cem\u003eplumbing\u003c/em\u003e- of an “enterprise” application. There, she found this pattern, copy-pasted everywhere: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eString st_id \u003d Integer.valueOf(rs.getString(\u0026quot;student_id\u0026quot;)).toString();\nmsgData.setSID(Integer.parseInt(st_id));\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHey, strings everybody! Strings. And integers. \u003c/p\u003e\n\n\u003ch3\u003eBirthyear\u003c/h3\u003e\n\n\u003cp\u003eWe usually avoid running date-related code, because dates are the \u003cem\u003eeasiest\u003c/em\u003e thing to screw up. The venerable Falsehoods Programmers Believe About Time (\u003ca href\u003d\"http://infiniteundo.com/post/25326999628/falsehoods-programmers-believe-about-time\"\u003ePart 1\u003c/a\u003e, \u003ca href\u003d\"http://infiniteundo.com/post/25509354022/more-falsehoods-programmers-believe-about-time\"\u003ePart 2\u003c/a\u003e) remain a great reference for all of the ways people can screw it up. But dates are a data type, so they're on theme for this article.\u003c/p\u003e\n\n\n\n\u003cp\u003eMy personal favorite bad-date code is when they obviously know enough to use the date-related operations and functions provided by their standard library, but still mysteriously feel the need to reinvent their own at the same time. It shows knowledge without \u003cspan title\u003d\"click me!\"\u003eunderstanding\n\u003c/span\u003e. \u003cstrong\u003eDominique\u003c/strong\u003e stumbled across this: \u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003enow \u003d datetime.now()\ndays_per_year \u003d 365.24\nfor age in ages: \n    result[\u0026#39;years\u0026#39;].append((now - timedelta(days\u003dage*days_per_year)).year)\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eI like its attempt at handling leap years- they even recognize that the centennial years don’t get leap years and drop 1/100 (of course, that only applies to centennial years divisible by 4, like 2000, but not 1900) . Of course, they’re already using the \u003ccode\u003e.year\u003c/code\u003e property of the \u003ccode\u003etimedelta\u003c/code\u003e object, which is a property also mirrored on date objects- they were so close, yet so far.\u003c/p\u003e\n\n\n\n\n\n\n\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/Content/Images/Sponsors/scout%2050x50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t\n\t[Advertisement] \n\t\u003ca href\u003d\"https://www.scoutapp.com/subscriptions?utm_source\u003dTDWTF\u0026amp;utm_medium\u003dFooter\u0026amp;utm_content\u003dFooter\u0026amp;utm_campaign\u003dTDWTF\"\u003eScout\u003c/a\u003e is the best way to monitor your critical server infrastructure. With over 90 open source plugins, robust alerting, beautiful dashboards and a 5 minute install - Scout saves youvaluable engineering time. Try the server monitoring you\u0026#39;ll 👍 today.Your first 30 days are free on us. Learn more at \u003ca href\u003d\"https://www.scoutapp.com/subscriptions?utm_source\u003dTDWTF\u0026amp;utm_medium\u003dFooter\u0026amp;utm_content\u003dFooter\u0026amp;utm_campaign\u003dTDWTF\"\u003eScout\u003c/a\u003e.\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003dwUvig9XGMuE:Bo-YLGpDICI:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/0gV7jSFwgD8\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e","categories":["Coded Smorgasbord"]},{"title":"Run Crash Crash Run","link":"http://thedailywtf.com/articles/run-crash-crash-run","author":"Maciej Stachowski","publishedDate":"Mon, 12 Oct 2015 03:30:00 -0700","contentSnippet":"As Max entered the room, he was instantly greeted by a scorching wave of heat.\n\n\n\nAs it turned out, even the freezing Russian ...","content":"\u003cp\u003eAs \u003cstrong\u003eMax\u003c/strong\u003e entered the room, he was instantly greeted by a scorching wave of heat.\u003c/p\u003e\n\n\u003cp style\u003d\"float:right;padding-left:10px;padding-bottom:10px\"\u003e\u003ca title\u003d\"By Miguel Carrasco [Public domain], via Wikimedia Commons\" href\u003d\"https://commons.wikimedia.org/wiki/File%3ABSoD_in_Windows_1.0.png\"\u003e\u003cimg width\u003d\"256\" alt\u003d\"BSoD in Windows 1.0\" src\u003d\"https://upload.wikimedia.org/wikipedia/commons/c/c1/BSoD_in_Windows_1.0.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAs it turned out, even the freezing Russian weather was no match for the boiling hot atmosphere at Sturmovik Games\u0026#39; office. The small Moscow-based company with a humble portfolio of mobile games was just days away from a major content update for one of them. Naturally, the whole place was on red alert. Said update had been in the works for over six months, and had been widely advertised as the greatest overhaul the three year-old game had ever seen.\u003c/p\u003e\n\n\u003cp\u003eDuring those six months, Max and his two coworkers put in an insane amount of work, implementing the ever-changing feature requests, writing and rewriting swathes of code, and fighting against the buggy third-party libraries they had to use. Finally, the stress and overtime hours were about to pay off. Every deadline had been met. All they had to do was deploy the update.\u003c/p\u003e\n\n\u003cp\u003eOr so Max thought. The booming voice behind him brought him back to harsh reality.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u0026quot;Who broke the build?!\u0026quot;\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eThe dreaded question hung in the air. Max turned to find Ivan, his fellow developer, standing and looking around the room to find the culprit. With the third developer on sick leave, there weren\u0026#39;t many other people to whom the question could be addressed.\u003c/p\u003e\n\n\u003cp\u003e\u0026quot;What do you mean?\u0026quot; Max asked. \u0026quot;It worked yesterday, and ...\u0026quot; He trailed off when he noticed an email that had just arrived in his mailbox:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eFrom: Alexey \u0026lt;apajitnov@sturmovikgames.net\u0026gt;\nTo: Icarus Flight DEV team \u0026lt;dev-2@sturmovikgames.net\u0026gt;\nSubject: CRITICAL Bug - game does not start\n\nThe game fails to start two out of three times. Please investigate.\n\nA.\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eKlaxons went off in Max\u0026#39;s head. \u0026quot;What?! I ran the game a million times yesterday. It was fine!\u0026quot;\u003c/p\u003e\n\n\u003cp\u003e\u0026quot;Okay then, let\u0026#39;s see it.\u0026quot; Ivan went up to his desk with his cellphone in hand. \u0026quot;I just cleared it off my phone, we\u0026#39;ll reinstall it.\u0026quot;\u003c/p\u003e\n\n\u003cp\u003eThe game launched and ran properly the first time they ran it. On the second launch, it crashed seconds into the splash screen. \u003c/p\u003e\n\n\u003cp\u003eMax stifled an expletive, his heart pounding. \u0026quot;Again.\u0026quot;\u003c/p\u003e\n\n\u003cp\u003eIvan tried running the app, only to have it refuse to start again.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003e\u0026quot;Again,\u0026quot;\u003c/em\u003e Max urged.\u003c/p\u003e\n\n\u003cp\u003eThat time, the game started without a hitch.\u003c/p\u003e\n\n\u003cp\u003eThey launched it about twenty times. The pattern remained unbroken: the game started up once, then crashed twice, then started up once, then crashed twice ...\u003c/p\u003e\n\n\u003cp\u003eAt first, Max had wondered if he could write it off as a connection problem, but the regularity of the pattern made him curious.\u003c/p\u003e\n\n\u003cp\u003e\u0026quot;Okay, this freaks me out,\u0026quot; Ivan said. \u0026quot;Let\u0026#39;s dig into the code, there\u0026#39;s some seriously eerie stuff going on.\u0026quot;\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cp\u003eAfter a whole morning of peeking and poking at the code, Max finally felt like all the pieces of the puzzle were coming together. He double-checked the lines he\u0026#39;d just modified. \u0026quot;Either I\u0026#39;m right, or I\u0026#39;ve lost all concept of reality.\u0026quot;\u003c/p\u003e\n\n\u003cp\u003eMax pulled the trigger and rebuilt the game. When he ran it for the first time, it worked as expected. Then, the moment of truth. He ran it a second time ... \u003c/p\u003e\n\n\u003cp\u003eIt didn\u0026#39;t crash. He did it. \u003cem\u003eHe broke the pattern.\u003c/em\u003e Max fell back against his desk chair with a sigh of relief.\u003c/p\u003e\n\n\u003cp\u003e\u0026quot;Hey, you fixed it!\u0026quot; Ivan was happy as a kid with a new toy. \u0026quot;What was the problem?\u0026quot;\u003c/p\u003e\n\n\u003cp\u003e\u0026quot;That stupid new XML save file,\u0026quot; Max groaned.\u003c/p\u003e\n\n\u003cp\u003eAs part of the update, management had decided that all save files for all games were to be migrated from undocumented binary blobs to a common XML-based format. Max hadn\u0026#39;t been too pleased about the change, but he\u0026#39;d written some migration code to change the file format on the first startup.\u003c/p\u003e\n\n\u003cp\u003e\u0026quot;See, on the first run, the game reads the old binary file, then saves it out as XML,\u0026quot; Max explained. \u0026quot;The game runs fine. Unfortunately, the new save file was \u003cem\u003ebroken.\u003c/em\u003e There was an unclosed tag right at the end.\u0026quot;\u003c/p\u003e\n\n\u003cp\u003e\u0026quot;Oh,\u0026quot; Ivan moaned, seeing where this was going.\u003c/p\u003e\n\n\u003cp\u003e\u0026quot;Wait, you don\u0026#39;t know the half of it,\u0026quot; Max said. \u0026quot;On the second run, the game tried to load the broken XML file, and failed. So it loaded the old binary file instead. But since the XML file was \u003cem\u003ethere\u003c/em\u003e, just broken, it got moved to the backup save location. Then a flag got set that said the save had been loaded from XML. So we had a binary file loaded, but the game thought it was running off the XML file. So it got confused and crashed.\u0026quot;\u003c/p\u003e\n\n\u003cp\u003e\u0026quot;Man, \u003cem\u003eI\u0026#39;m\u003c/em\u003e confused,\u0026quot; Ivan muttered.\u003c/p\u003e\n\n\u003cp\u003e\u0026quot;On the third run, no XML file was present in the save directory, so the game tried to load one from backup,\u0026quot; Max continued. \u0026quot;But the only XML file in that location was the broken save from before, so that failed. It fell back to loading the binary save again. Since that succeeded, it deleted the broken XML file in the backup location, then tried to move the current XML save file there. Except there \u003cem\u003ewas\u003c/em\u003e no XML file to be moved to backup, so the app crashed again. And since we deleted the backup, all we had left was the old binary blob. Which meant we were back to where we started.\u0026quot;\u003c/p\u003e\n\n\u003cp\u003eBy the time Max finished his explanation, Ivan\u0026#39;s head was visibly spinning. \u0026quot;It\u0026#39;s fixed now, right?\u0026quot;\u003c/p\u003e\n\n\u003cp\u003e\u0026quot;Right.\u0026quot; Max smiled, wiping sweat off his brow. After braving this fire unscathed, nothing would stop them from a timely, functional release.\u003c/p\u003e\n\n\n\n\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/images/footer/inedo50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t[Advertisement] Use NuGet or npm? Check out \u003ca href\u003d\"http://inedo.com/proget?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eProGet\u003c/a\u003e, the easy-to-use package repository that lets you host and manage your own personal or enterprise-wide NuGet feeds and npm repositories. It's got an \n\t\u003ca href\u003d\"http://inedo.com/proget/features?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eimpressively-featured free edition\u003c/a\u003e, too!\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003d0uYRCpPsqH4:H5Ow6OpWXXY:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/WnS8wX-fCqI\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e","categories":["Feature Articles"]},{"title":"Error'd: Installing Flash Player is Hard Work","link":"http://thedailywtf.com/articles/installing-flash-player-is-hard-work","author":"Mark Bowytz","publishedDate":"Fri, 09 Oct 2015 03:00:00 -0700","contentSnippet":"\"Installing Flash Player sure is hard work,\" Mike H. wrote, \"good thing that Adobe suggested taking a bit of a break ...","content":"\u003cp\u003e\"Installing Flash Player sure is hard work,\" \u003cstrong\u003eMike H.\u003c/strong\u003e wrote, \"good thing that Adobe suggested taking a bit of a break afterwards.\" \n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-3\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e184/Pic-3.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eAndrew K.\u003c/strong\u003e writes, \"Amazon must be targeting robots with the product description on this one.\"\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-1\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e184/Pic-1.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\"The irony definitely wasn't lost on me for this one,\" wrote \u003cstrong\u003eDeclan H.\u003c/strong\u003e\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-2\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e184/Pic-2.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\"The position is tempting,\" \u003cstrong\u003eJustin C.\u003c/strong\u003e wrote, \"So long as it isn't a professorship in database design, I guess we are OK.\"\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-4\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e184/Pic-4.jpg\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\"A gentle reminder that tapping through to the Selfridges sale would result in null feelings of fulfilment and happiness,\" \u003cstrong\u003eHannah S.\u003c/strong\u003e writes.\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-5\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e184/Pic-5.jpg\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eJulian\u003c/strong\u003e wrote, \"How does this even work? Did I walk backwards for a while but didn't notice it?!\"\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-6\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e184/Pic-6.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\u003cstrong\u003eThomas P.\u003c/strong\u003e writes, \"Can I just get one ounce of each clipper and see which one I like best before I buy?\"\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-7\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e184/Pic-7.jpg\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\"I recently downloaded Polish localization for Visual Studio and I was really impressed by the quality of it,\" wrote \u003cstrong\u003eMarcin Z.\u003c/strong\u003e, \"There were small issues here and there, but nothing harmful. That is, until I wanted to remove a file from a project.\"\n\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003ca href\u003d\"#Pic-8\"\u003e\u003cimg border\u003d\"0\" alt\u003d\"\" src\u003d\"http://thedailywtf.com/images/15/q3/e184/Pic-8.png\"\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003c/blockquote\u003e\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/images/footer/inedo50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t[Advertisement] \u003ca href\u003d\"http://inedo.com/buildmaster?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eBuildMaster\u003c/a\u003e is more than just an automation tool: it brings together the people, process, and practices that allow teams to deliver software rapidly, reliably, and responsibly. And it's incredibly easy to get started; \u003ca href\u003d\"http://inedo.com/buildmaster?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003edownload now\u003c/a\u003e and use the built-in tutorials and wizards to get your builds and/or deploys automated!\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003ddKGmQGtD864:9ysivHf_WTo:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/gLJc9qIrQpU\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e","categories":["Error\u0026#39;d"]},{"title":"Announcements: Sponsor Announcement: Scout","link":"http://thedailywtf.com/articles/sponsor-announcement-scout","author":"Remy Porter","publishedDate":"Thu, 08 Oct 2015 07:00:00 -0700","contentSnippet":"Our sponsorship program has been a great success, and we\u0026#8217;ve got another great sponsor to help us keep this site running ...","content":"\u003cp\u003eOur \u003ca href\u003d\"http://thedailywtf.com/articles/selling-out-again-with-puppet-labs-\"\u003esponsorship program\u003c/a\u003e has been a great success, and we’ve got another great sponsor to help us keep this site running and bring you the horrors that your jaded eyes crave, along with special features like \u003ca href\u003d\"http://thedailywtf.com/series/tdwtf-live\"\u003eTDWTF Live\u003c/a\u003e and our recent BYOC contest about the \u003ca href\u003d\"http://thedailywtf.com/series/bring-your-own-code\"\u003eLucky Deuce\u003c/a\u003e. Our newest sponsor is \u003ca href\u003d\"https://scoutapp.com/\"\u003eScout\u003c/a\u003e. They donate $10 to the Larimer County Humane Society every time somebody tries out Scout, and now they’re launching a new tool… \u003c/p\u003e\n\n\u003cp\u003e\u003ca href\u003d\"http://scoutapp.com\"\u003e\u003cimg src\u003d\"/images/remy/scoutlogo.png\" width\u003d\"300\"\u003e\u003c/a\u003e\u003chr\u003e \u003c/p\u003e\n\n\u003cp\u003eFounded in 2009, Scout has been delivering SaaS based server monitoring software for over 6 years. With StatsD \u0026amp; AWS support, Scout Server Monitoring has been the clean, reliable alternative to expensive build-your-own monitoring solutions. \u003c/p\u003e\n\n\u003cp\u003eNow, due to overwhelming customer demand for a fresh approach to APM, Scout has built a cloud-based / SaaS Application Performance Management tool for critical web applications. Dominant SaaS APM solutions (e.g. New Relic) are almost a decade old. Scout APM is a fresh take with modern, streamlined interface and unmatched capabilities. \u003c/p\u003e\n\n\u003cp\u003eScout APM provides deep metrics, analysis and solutions for performance problems in production web application. For developers, Scout APM is the fastest path from performance nightmares to the specific line-of-code. With built-in git integration, Scout APM can even identify the specific developer who can solve the problem based on code commit history. \u003c/p\u003e\n\n\u003cp\u003eFor managers and business owners, Scout APM prioritizes slow performance according to business impact. Scout APM allows customers to add context to find out who is affected most by slow performance. \u003c/p\u003e\n\n\u003cp\u003eFind out more at: \u003ca href\u003d\"http://apm.scoutapp.com\"\u003eapm.scoutapp.com\u003c/a\u003e, or if you’re in Las Vegas for AWS re:Invent 2015 stop in at booth #1130. Be sure to ask about the Oculus Rift give-away\u003c/p\u003e\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/images/footer/puppetlabs50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t[Advertisement] Manage IT infrastructure as code across all environments with \u003ca href\u003d\"http://puppetlabs.com/\"\u003ePuppet\u003c/a\u003e. Puppet Enterprise now offers more control and insight, with role-based access control, activity logging and all-new Puppet Apps. Start your \u003ca href\u003d\"http://puppetlabs.com/download-puppet-enterprise\"\u003efree trial\u003c/a\u003e today!\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003d-UVcDbP6h00:0A8pq-FlDM0:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/9B2wR8cJ7lw\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e","categories":["Announcements"]},{"title":"CodeSOD: Not So Unique","link":"http://thedailywtf.com/articles/not-so-unique","author":"Maciej Stachowski","publishedDate":"Thu, 08 Oct 2015 03:30:00 -0700","contentSnippet":"When designing a database schema, it\u0026#39;s often important to assign a unique identifier to each record. Such surrogate keys ...","content":"\u003cp\u003eWhen designing a database schema, it\u0026#39;s often important to assign a unique identifier to each record. Such surrogate keys almost always make querying for data both simpler and faster, and the overhead of an additional column is usually a cost worth paying. As such, nearly all databases provide some means of generating such identifiers, either in form of sequential numbers, or more fancy UUID schemes.\u003c/p\u003e\n\n\u003cp style\u003d\"float:right;padding-left:10px;padding-bottom:10px\"\u003e\u003ca title\u003d\"By Alexey Kljatov (Own work) [CC BY-SA 4.0 (http://creativecommons.org/licenses/by-sa/4.0)], via Wikimedia Commons\" href\u003d\"https://commons.wikimedia.org/wiki/File%3ASnowflake_macro_photography_1.jpg\"\u003e\u003cimg width\u003d\"256\" alt\u003d\"Snowflake macro photography 1\" src\u003d\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d7/Snowflake_macro_photography_1.jpg/256px-Snowflake_macro_photography_1.jpg\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAs is often the case at The Daily WTF, however, many developers prefer to reinvent the wheel. Today\u0026#39;s code came to light when our \u003cstrong\u003eAnonymous\u003c/strong\u003e submitter—a mid-level programmer maintaining the codebase written by a team of senior developers and highly paid consultants—was tasked with investigating a failing bulk import from an external system. The procedure didn\u0026#39;t throw any errors, but for some reason only half of the 12 million records ended up inserted into the database.\u003c/p\u003e\n\n\u003cp\u003eDigging through the code, he finally found the source of all his problems:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e public static int GetUniqueKey(int value1, string value2)\n    {\n      int key \u003d value1.GetHashCode();\n      key \u003d (key * 3) + value2.GetHashCode();\n      return key;\n    }\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe original developer thought she was being clever, using a pair of keys that uniquely identified a record to generate an ID for the insert (and multiplying one of them by 3 for whatever godawful reason). What she failed to account for, however, was the \u003ca href\u003d\"https://en.wikipedia.org/wiki/Birthday_problem\"\u003ebirthday problem\u003c/a\u003e. With the identifier being only a 32-bit integer, it was almost certain that among the 12 million IDs generated, many of them would not be unique.  Together with the insert library silently dropping entries with the same key, our poor submitter ended up with a recipe for disaster on his hands.\u003c/p\u003e\n\n\u003cp\u003eOur submitter suggested using an MD5 hash to generate unique keys instead, not realizing that this code was guarded by the red-taped barbed wire of cronyism. He was told that his approach would introduce an unacceptable performance hit. And after all, this code had been written by the lead-est of lead developers. It was copy/pasted throughout the codebase. How could \u003cem\u003ehe\u003c/em\u003e possibly improve upon it?\u003c/p\u003e\n\n\u003cp\u003eCode that simply generates sequential IDs would be an improvement, but our submitter\u0026#39;s too busy applying to new jobs elsewhere to bother pointing this out.\u003c/p\u003e\n\n\n\n\n\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/images/footer/release50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t[Advertisement] \u003ca href\u003d\"http://inedo.com/release?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eRelease!\u003c/a\u003e\n\tis a light card game about software and the people who make it. Play with 2-5 people, or up to 10 with two copies - only $9.95 shipped!\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003dl3Zp8GTRuYI:RyGOL2v1Hcs:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/g2JVqMqpQqI\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e","categories":["CodeSOD"]},{"title":"Dual Helix","link":"http://thedailywtf.com/articles/dual-helix","author":"Erik Gern","publishedDate":"Wed, 07 Oct 2015 03:30:00 -0700","contentSnippet":"Bruce B., a recent high school graduate in need of a job, thought it was a good opportunity. A friend had set him up with a job ...","content":"\u003cp\u003e\u003cstrong\u003eBruce B.\u003c/strong\u003e, a recent high school graduate in need of a job, thought it was a good opportunity. A friend had set him up with a job at a one-man development shop. His new boss, Louis, would provide on-the-job training, and it paid well for an entry-level position. \u003c/p\u003e\n\n\u003cp\u003eLouis met Bruce at the former’s house and led him to a basement office. “Your friend told me a lot about you, Bruce,” Louis said. He had a smile like Jack Torrance from \u003cem\u003eThe Shining\u003c/em\u003e. “Is it true you can already program?” \u003c/p\u003e\n\n\u003cp\u003e\u003ca title\u003d\"By NA (Wikimedia) [CC BY-SA 3.0 (http://creativecommons.org/licenses/by-sa/3.0)], via Wikimedia Commons\" href\u003d\"https://commons.wikimedia.org/wiki/File%3ADNA_helix-structures.jpg\"\u003e\u003cimg width\u003d\"128\" alt\u003d\"DNA helix-structures\" src\u003d\"https://upload.wikimedia.org/wikipedia/commons/c/c2/DNA_helix-structures.jpg\"\u003e\u003c/a\u003e \u003c/p\u003e\n\n\u003cp\u003e“Oh, sure,” Bruce said. “I’ve been coding C# for a while now. I’ve learned how to use classes and interfaces–” \u003c/p\u003e\n\n\u003cp\u003e“C#? What a useless language.” Louis waved his hand. “I’ve got the real deal.” \u003c/p\u003e\n\n\u003cp\u003eLouis led Bruce an Apple LC. On the screen were displayed rounded rectangles, with labels such as “Unique” and “If/Then/Else”, linked together by arrows. It was as if someone had created a flowchart using children’s wooden letter blocks. \u003c/p\u003e\n\n\u003cp\u003e“Helix,” Louis announced. “The pinnacle in computer programming languages.” \u003c/p\u003e\n\n\u003ch2\u003eA Normalized Genome\u003c/h2\u003e\n\n\u003cp\u003eDouble Helix, Louis explained, was the most advanced version of a series of database management systems, using a fully-graphical programming language for its procedural code. Introduced early in the 1980s, \u003ca href\u003d\"https://en.wikipedia.org/wiki/Helix_(database)\"\u003eHelix\u003c/a\u003e became a niche product by the end of the decade, overtaken by dbase and other, less GUI-reliant relational databases. \u003c/p\u003e\n\n\u003cp\u003e“I’ll give you an ebook that will teach you the language,” Louis said. He stared longingly at the screen. “It’s truly a magnificent piece of software.” \u003c/p\u003e\n\n\u003cp\u003eBruce shook off the cultish feeling that afternoon before reading Louis’s email. He had attached a PDF of \u003cem\u003eRiding the Helix Express.\u003c/em\u003e Bruce stayed up all night, reading it in morbid fascination. \u003c/p\u003e\n\n\u003cp\u003eThe next day he mentioned a passage on normalization to Louis. “The book doesn’t go into much detail. What do you use for normalization?” \u003c/p\u003e\n\n\u003cp\u003e“What? Forget that.” Louis waved his arms around. “In fact, delete that book. It’s no good. Helix doesn’t need \u003cem\u003eold-fashioned\u003c/em\u003e normalization. It has its own way of normalizing data.” \u003c/p\u003e\n\n\u003cp\u003eBruce didn’t remember that part from \u003cem\u003eRiding the Helix Express,\u003c/em\u003e but Louis had already moved on. He put Bruce to work correcting some records in a car dealership’s database. \u003c/p\u003e\n\n\u003ch2\u003eFlowchart DNA\u003c/h2\u003e\n\n\u003cp\u003eNone of the data, Bruce discovered, had been normalized. Salespeople would routinely mistype IDs and other fields, filling the database with mismatched data. In fact, there was no validation on any fields. As Bruce worked on other databases Louis had created, he found similar data integrity issues. \u003c/p\u003e\n\n\u003cp\u003eLouis’s Helix code, which Bruce routinely had to troubleshoot, was worse. Those block-like flowcharts were much harder to follow than a regular, typed programming language, exacerbated by Louis’s spaghetti coding patterns. Fixing it was like untangling Christmas lights. \u003c/p\u003e\n\n\u003cp\u003eBut the money was good, so Bruce kept coming into work. \u003c/p\u003e\n\n\u003cp\u003eMeanwhile, Louis showed growing disappointment in his new hire. “Bruce, I don’t know why I put up with you. You’re always critizing my work, you don’t follow my advice, and I’ve seen you reading that ebook I told you to delete. I really need you to shape up, or I’ll have to let you go.” \u003c/p\u003e\n\n\u003ch2\u003eUnwound Helix\u003c/h2\u003e\n\n\u003cp\u003eOne day, Bruce arrived in the basement to find Louis in a huff. \u003c/p\u003e\n\n\u003cp\u003e“I’ve put up with your shenanigans all summer, Bruce. ‘Normalization,’ ‘indexing,’ it’s just one excuse after another with you!” He pointed at his screen. “Now, this procedure isn’t working. Show me you’re still capable of doing this job.” \u003c/p\u003e\n\n\u003cp\u003eBruce sighed, sat at his computer, and tried to make sense of Louis’s code. It was the worst tangle that he had seen since he started working for Louis. Worse, Bruce had skipped his coffee that morning, leaving him unable to concentrate. \u003c/p\u003e\n\n\u003cp\u003e“I don’t think I–” \u003c/p\u003e\n\n\u003cp\u003e“Gaaah!” Louis pushed Bruce aside and sat himself in front of the computer. He started playing with the blocks, teasing apart the code. Bruce, sitting nearby, watched in silence, listening to the clock ticking on the wall, the click-click of the mouse, Louis’s little groans of frustration. The Helix code swam in front of his eyes, filling the room, enveloping him– \u003c/p\u003e\n\n\u003cp\u003eBruce woke just before he hit the floor. He had fallen asleep and slipped out of his chair. \u003c/p\u003e\n\n\u003cp\u003eLouis, caught up in his work, hadn’t even noticed. \u003c/p\u003e\n\n\u003cp\u003eAs his boss continued to untangle his own Helix code, Bruce quietly wrote a resignation note and left it on his desk. In his opinion, Double Helix should never have left the 1980s.\u003c/p\u003e\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/images/footer/inedo50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t[Advertisement] Use NuGet or npm? Check out \u003ca href\u003d\"http://inedo.com/proget?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eProGet\u003c/a\u003e, the easy-to-use package repository that lets you host and manage your own personal or enterprise-wide NuGet feeds and npm repositories. It's got an \n\t\u003ca href\u003d\"http://inedo.com/proget/features?utm_source\u003dtdwtf\u0026amp;utm_medium\u003dfooter\u0026amp;utm_content\u003dbmgeneric\u0026amp;utm_campaign\u003ddailywtf15\"\u003eimpressively-featured free edition\u003c/a\u003e, too!\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003dDIOMs5mpXfs:NnYwfFzPy4U:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/ZNFSbCI2RDM\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e","categories":["Feature Articles"]},{"title":"CodeSOD: The Most Pessimistic Search","link":"http://thedailywtf.com/articles/the-most-pessimistic-search","author":"Jane Bailey","publishedDate":"Tue, 06 Oct 2015 03:30:00 -0700","contentSnippet":"Sometimes here at TDWTF, we get code snippets that are immediately obvious in their wrongness. But sometimes, the code only ...","content":"\u003cp\u003eSometimes here at TDWTF, we get code snippets that are immediately obvious in their wrongness. But sometimes, the code only looks mildly inefficient, and it's up to the submitter to let us know how bad it actually is.\u003c/p\u003e\n\n\u003cp style\u003d\"float:right;padding-left:10px;padding-bottom:10px\"\u003e\u003ca title\u003d\"By macrophile on Flickr [CC BY 2.0 (http://creativecommons.org/licenses/by/2.0)], via Wikimedia Commons\" href\u003d\"https://commons.wikimedia.org/wiki/File%3ACommon_snail.jpg\"\u003e\u003cimg width\u003d\"256\" alt\u003d\"Common snail\" src\u003d\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Common_snail.jpg/256px-Common_snail.jpg\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eTake the following snippet:\u003c/p\u003e\n\u003cpre\u003e\n\u003ccode\u003e\nlogdest\u003d0;\nif(DbSetFirst(dbptr)!\u003d-1) {\n    while(DbGetNext(dbptr, destptr)!\u003d-1) {\n        if(destptr-\u0026gt;physical\u003d\u003dDestnameToDest(data[i].Destname)) {\n            logdest\u003ddestptr-\u0026gt;logical\n        }\n    }\n\u003c/code\u003e\n\u003c/pre\u003e\n\u003cp\u003eSure, it doesn't early exit, but depending on the size of the row set, that might be only a minor tweak, right? \u003c/p\u003e\n\u003cp\u003eSubmitter \u003cb\u003eAnders K.\u003c/b\u003e tells us this code was typically looping through datasets of around 4,000 rows, and performing successfully with that. When it had to process a 42,000 row batch, however, it took around 20 minutes to update what should have been a once-per-minute status report. That innocent-looking DestnameToDest() is an expensive operation that makes a linear search of a 2048-element array.\u003cp\u003e\n\u003cp\u003eThe rewritten code, which takes only a few seconds to perform the update?\u003c/p\u003e\n\n\u003cpre\u003e\n\u003ccode\u003e\ndestptr-\u0026gt;physical \u003d DestnameToDest(data[i].Destname);\nif (DbFind(dbptr, destptr) !\u003d -1) {\n    logdest \u003d destptr-\u0026gt;logical;\n}\n\u003c/code\u003e\n\u003c/pre\u003e\n\n\u003cp\u003eOur submitter writes: \u003ci\u003e\"I challenged a few of my colleagues to come up with a worse implementation, that would still seem reasonable. No one was able to do so.\"\u003c/i\u003e I imagine some of you in the comments will take that as a challenge.\u003c/p\u003e\n\n\n\n\u003cdiv\u003e\n\t\u003cimg src\u003d\"http://thedailywtf.com/Content/Images/Sponsors/scout%2050x50.png\" style\u003d\"display:block;float:left;margin:0 10px 10px 0\"\u003e\n\t\n\t[Advertisement] \n\t\u003ca href\u003d\"https://www.scoutapp.com/subscriptions?utm_source\u003dTDWTF\u0026amp;utm_medium\u003dFooter\u0026amp;utm_content\u003dFooter\u0026amp;utm_campaign\u003dTDWTF\"\u003eScout\u003c/a\u003e is the best way to monitor your critical server infrastructure. With over 90 open source plugins, robust alerting, beautiful dashboards and a 5 minute install - Scout saves youvaluable engineering time. Try the server monitoring you\u0026#39;ll 👍 today.Your first 30 days are free on us. Learn more at \u003ca href\u003d\"https://www.scoutapp.com/subscriptions?utm_source\u003dTDWTF\u0026amp;utm_medium\u003dFooter\u0026amp;utm_content\u003dFooter\u0026amp;utm_campaign\u003dTDWTF\"\u003eScout\u003c/a\u003e.\n\u003c/div\u003e\n\u003cdiv style\u003d\"clear:left\"\u003e \u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://syndication.thedailywtf.com/~ff/TheDailyWtf?a\u003dqdz-SmN2iKU:aEO-izlmX3Q:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/TheDailyWtf?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/TheDailyWtf/~4/G3g60wbrij0\" height\u003d\"1\" width\u003d\"1\" alt\u003d\"\"\u003e\u003c/p\u003e\u003c/p\u003e","categories":["CodeSOD"]}]}}, "responseDetails": null, "responseStatus": 200}